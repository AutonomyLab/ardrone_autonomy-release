# Based on ros-control travis config by Dave Coleman
language:
  - cpp
compiler:
  - gcc
before_install: # Use this to prepare the system to install prerequisites or dependencies
  #  travis ci's boxes are powered by Ubuntu Precise, therfore we are limited to ROS Hydro.
  - export ROS_DISTRO=hydro
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - export CATKIN_WS=~/ardrone_ws
  - export CATKIN_WS_SRC=${CATKIN_WS}/src 
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME"
  - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-ros-base python-rosinstall
  # Setup rosdep
  - sudo rosdep init
  - rosdep update
install: # Use this to install any prerequisites or dependencies necessary to run your build
  # Create workspace
  - mkdir -p $CATKIN_WS_SRC
  - cd $CATKIN_WS_SRC
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - catkin_init_workspace
  - ln -s $CI_SOURCE_PATH . # Link the repo we are testing to the new workspace
  - cd ../
  # Install dependencies for source repos
  - rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y
before_script: # Use this to prepare your build for testing e.g. copy database configurations, environment variables, etc.
  - source /opt/ros/$ROS_DISTRO/setup.bash
script: # All commands must exit with code 0 on success. Anything else is considered failure.
  - catkin_make -j2

